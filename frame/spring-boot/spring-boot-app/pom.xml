<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>spring-boot</artifactId>
        <groupId>com.guyang</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>spring-boot-app</artifactId>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.guyang</groupId>
            <artifactId>spring-boot-config</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.guyang</groupId>
            <artifactId>spring-boot-action</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.guyang</groupId>
            <artifactId>spring-boot-remote-service</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!--<dependency>
            <groupId>io.dubbo.springboot</groupId>
            <artifactId>spring-boot-starter-dubbo</artifactId>
            <version>1.0.0</version>
        </dependency>-->
    </dependencies>

    <profiles>
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <profiles-active>local</profiles-active>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <profiles-active>test</profiles-active>
            </properties>
        </profile>
    </profiles>


    <build>
        <!--打包时resources文件的配置，maven打包时，默认会把java目录内的class文件，和resources目录内的所有文件打包-->
        <plugins>
            <!--资源插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <!--配置资源文件编码-->
                    <encoding>UTF-8</encoding>
                    <!--使用默认占位符${ },否则yml或properties文件中要使用@**@-->
                    <useDefaultDelimiters>true</useDefaultDelimiters>

                    <!--如果有其它目录的文件或java目录内的非class文件需要打包,则需要在此处配置或在<build><resources>内-->
                    <resources>
                        <resource>
                            <directory>src/main/resources</directory>
                            <!--排除文件的列表-->
                            <excludes>
                                <exclude>application*.yml</exclude>
                            </excludes>
                        </resource>
                        <resource>
                            <directory>src/main/resources</directory>
                            <!--filtering配置的作用是：把application配置文件中的占位符@**@或${}  替换成正确的值-->
                            <filtering>true</filtering>
                            <!--包含的文件列表-->
                            <includes>
                                <include>application.yml</include>
                                <include>application-${profiles-active}.yml</include>
                            </includes>
                        </resource>
                    </resources>
                </configuration>
            </plugin>

            <!--编译插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>utf-8</encoding>
                </configuration>
            </plugin>

            <!--打war包插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <warName>ROOT</warName>
                </configuration>
            </plugin>
        </plugins>

    </build>


</project>